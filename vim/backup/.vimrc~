" Setup {{{1
set nocompatible
filetype on
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'YankRing.vim' 
Bundle 'vim-scripts/FuzzyFinder'
Bundle 'vim-scripts/xptemplate'
Bundle 'vim-scripts/L9'
Bundle 'mileszs/ack.vim'
Bundle 'scrooloose/syntastic'
Bundle 'vim-scripts/tComment'
Bundle 'godlygeek/tabular'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-sleuth'  
Bundle 'tpope/vim-surround'
Bundle 'vim-ruby/vim-ruby'
Bundle 'tpope/vim-rails'
Bundle 'tpope/vim-haml'
Bundle 'kchmck/vim-coffee-script'

" Colorschemes
Bundle 'tpope/vim-vividchalk'  
Bundle 'vim-scripts/mayansmoke'
Bundle 'altercation/vim-colors-solarized'
Bundle 'sjl/badwolf'

filetype plugin indent on
syntax on
set background=dark
colorscheme badwolf
match ErrorMsg '^\(<\|=\|>\)\{7\}\([^=].\+\)\?$'
" Basics {{{1
let mapleader = ","
let maplocalleader = ",,"
set foldmethod=marker
set enc=utf-8      
set fileencodings=utf-8
set fillchars=diff:⣿,vert:│
set hidden
set lazyredraw
set cursorline
set showmode
set wildmenu
set autoread
set backspace=2 "make backspace work like in other apps
set fileformats=mac,unix,dos
set ignorecase
set incsearch
set list
set listchars=tab:▸\ ,eol:¬
set omnifunc=syntaxcomplete#Complete
set shiftwidth=4
set expandtab
set wildmode=list:longest,list:full
set showcmd
set smartcase
set smartindent
set spelllang=eng
set tabstop=4
set timeoutlen=600
set ttyfast
set wrapmargin=0
set linebreak
set display=lastline
" Backups {{{1

set backup                        " enable backups
set noswapfile                    " It's 2012, Vim.
set history=1000
set undodir=~/.vim/tmp/undo//     " undo files
set backupdir=~/.vim/tmp/backup// " backups

" Make those folders automatically if they don't already exist.
if !isdirectory(expand(&undodir))
    call mkdir(expand(&undodir), "p")
endif
if !isdirectory(expand(&backupdir))
    call mkdir(expand(&backupdir), "p")
endif


" Gui {{{1
if has("gui_running")
	set guioptions-=T
	set guioptions-=r
	set guioptions-=R
	set guioptions-=m
	set guioptions-=l
	set guioptions-=L
	set guioptions=%t
endif
" Mappings {{{1

" Learnings {{{2
"
" German Keyboard {{{2
map ü [
map! ü [
map ö (
map! ö (
map ä {
map! ä {
map ß \
map! ß \
map! oe &#x00F6;
map! Oe &#x00D6;
map! Ue &#x00DC;
map! ue &#x00FC;
map! Ae &#x00C4;
map! ae &#x00E4;
map! s# &#x00DF;
" Moving arround {{{2

nmap <silent> ,ev :e $MYVIMRC<cr>
nmap <silent> ,sv :so $MYVIMRC<cr>
nmap  ,p :set invpaste:set paste?
nmap  ,n :set invhls:set hls?
nmap  ,w :set invwrap:set wrap?
nmap  ,rr :1,$retab
nmap  ,cd :lcd %:h
nmap  ,md :!mkdir -p %:p:h


" Folding {{{2
nnoremap <Space> za
vnoremap <Space> za

" Make zO recursively open whatever top level fold we're in, no matter where the
" cursor happens to be.
nnoremap zO zCzO



" XPtemplate {{{2
nmap <C-F2> :XPTreload<Cr>
nmap <silent> ,et :XPTedit<cr>
command! XPTedit exe ":vnew ~/.vim/xptemplate_personal_snippets/ftplugin/".&ft."/".&ft.".xpt.vim"
" Plugins {{{1
" xptemplate {{{2
let g:xptemplate_snippet_folders = ['/home/johannes/.vim/xptemplate_personal_snippets']
let g:xptemplate_to_right = '<C-_>'
let g:xptemplate_goback = '<C-g>'
let g:xptemplate_fallback = '<Plug>supertabKey'
let g:xptemplate_key = '<Tab>'
let g:xptemplate_pum_tab_nav = 1
let g:xptemplate_minimal_prefix = 'full'

" Supertab {{{2
let g:SuperTabMappingForward = '<Plug>supertabKey'
let g:SuperTabMappingTabLiteral ='<c-tab>'

" latex- box {{{2
let g:LatexBox_viewer = 'evince'
let g:LatexBox_latexmk_options = '-pv'
let g:LatexBox_latexmk_options="-pdf"
let g:LatexBox_output_type="pdf"
let g:tex_flavor = "latex"



" Autocommands {{{1
au BufWritePost *.tex Latexmk
au BufRead,BufNewFile *.txt		set filetype=markdown
au BufRead,BufNewFile *.md		set filetype=markdown
" Line Return {{{1

" Make sure Vim returns to the same line when you reopen a file.
" Thanks, Amit
augroup line_return
    au!
    au BufReadPost *
        \ if line("'\"") > 0 && line("'\"") <= line("$") |
        \     execute 'normal! g`"zvzz' |
        \ endif
augroup END

